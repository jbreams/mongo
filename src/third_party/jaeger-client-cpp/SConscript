Import("env")

env = env.Clone()

env.AppendUnique(
    CPPPATH=[
        '$BUILD_DIR/third_party/jaeger-client-cpp/dist/src'
    ],
    CXXFLAGS=[
        '-Wno-overloaded-virtual'
    ],
)

env.Substfile(
    source='dist/src/jaegertracing/Constants.h.in',
    target='dist/src/jaegertracing/Constants.h',
    SUBST_DICT=[
        ('@PROJECT_VERSION@', "0.4.2"),
        ('#cmakedefine JAEGERTRACING_WITH_YAML_CPP', '#define JAEGERTRACING_WITH_YAML_CPP 1'),
    ],
)

env.InjectThirdParty(
    libraries=[
        'boost',
        'opentracing-cpp',
        'thrift',
        'yaml'
    ]
)

env.Library(
    target='jaegertracing',
    source=env.File([
        'Config.cpp',
        'DynamicLoad.cpp',
        'LogRecord.cpp',
        'Logging.cpp',
        'Reference.cpp',
        'Span.cpp',
        'SpanContext.cpp',
        'Tag.cpp',
        'TraceID.cpp',
        'Tracer.cpp',
        'TracerFactory.cpp',
        'Transport.cpp',
        'UDPTransport.cpp',
        'baggage/BaggageSetter.cpp',
        'baggage/RemoteRestrictionJSON.cpp',
        'baggage/RemoteRestrictionManager.cpp',
        'baggage/Restriction.cpp',
        'baggage/RestrictionManager.cpp',
        'baggage/RestrictionsConfig.cpp',
        'metrics/Counter.cpp',
        'metrics/Gauge.cpp',
        'metrics/InMemoryStatsReporter.cpp',
        'metrics/Metric.cpp',
        'metrics/Metrics.cpp',
        'metrics/NullCounter.cpp',
        'metrics/NullGauge.cpp',
        'metrics/NullStatsFactory.cpp',
        'metrics/NullStatsReporter.cpp',
        'metrics/NullTimer.cpp',
        'metrics/StatsFactory.cpp',
        'metrics/StatsFactoryImpl.cpp',
        'metrics/StatsReporter.cpp',
        'metrics/Timer.cpp',
        'net/IPAddress.cpp',
        'net/Socket.cpp',
        'net/URI.cpp',
        'net/http/Error.cpp',
        'net/http/Header.cpp',
        'net/http/Method.cpp',
        'net/http/Request.cpp',
        'net/http/Response.cpp',
        'platform/Endian.cpp',
        'platform/Hostname.cpp',
        'propagation/Extractor.cpp',
        'propagation/HeadersConfig.cpp',
        'propagation/Injector.cpp',
        'propagation/Propagator.cpp',
        'reporters/CompositeReporter.cpp',
        'reporters/Config.cpp',
        'reporters/InMemoryReporter.cpp',
        'reporters/LoggingReporter.cpp',
        'reporters/NullReporter.cpp',
        'reporters/RemoteReporter.cpp',
        'reporters/Reporter.cpp',
        'samplers/AdaptiveSampler.cpp',
        'samplers/Config.cpp',
        'samplers/ConstSampler.cpp',
        'samplers/GuaranteedThroughputProbabilisticSampler.cpp',
        'samplers/ProbabilisticSampler.cpp',
        'samplers/RateLimitingSampler.cpp',
        'samplers/RemoteSamplingJSON.cpp',
        'samplers/RemotelyControlledSampler.cpp',
        'samplers/Sampler.cpp',
        'samplers/SamplingStatus.cpp',
        'thrift-gen/Agent.cpp',
        'thrift-gen/AggregationValidator.cpp',
        'thrift-gen/BaggageRestrictionManager.cpp',
        'thrift-gen/Collector.cpp',
        'thrift-gen/Dependency.cpp',
        'thrift-gen/SamplingManager.cpp',
        'thrift-gen/ZipkinCollector.cpp',
        'thrift-gen/agent_constants.cpp',
        'thrift-gen/agent_types.cpp',
        'thrift-gen/aggregation_validator_constants.cpp',
        'thrift-gen/aggregation_validator_types.cpp',
        'thrift-gen/baggage_constants.cpp',
        'thrift-gen/baggage_types.cpp',
        'thrift-gen/dependency_constants.cpp',
        'thrift-gen/dependency_types.cpp',
        'thrift-gen/jaeger_constants.cpp',
        'thrift-gen/jaeger_types.cpp',
        'thrift-gen/sampling_constants.cpp',
        'thrift-gen/sampling_types.cpp',
        'thrift-gen/zipkincore_constants.cpp',
        'thrift-gen/zipkincore_types.cpp',
        'utils/ErrorUtil.cpp',
        'utils/HexParsing.cpp',
        'utils/RateLimiter.cpp',
        'utils/UDPClient.cpp',
        'utils/YAML.cpp',
    ], 'dist/src/jaegertracing'),
    LIBDEPS=[
        '$BUILD_DIR/third_party/shim_opentracing_cpp',
        '$BUILD_DIR/third_party/shim_thrift',
        '$BUILD_DIR/third_party/shim_yaml',
    ],
    AIB_COMPONENT='jaeger-client',
)
